{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kikuchi/FullStackExercises/part3/NodeStudies/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport noteService from './services/notes';\nimport axios from 'axios';\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    axios.get('https://secret-woodland-45578.herokuapp.com/apinotes').then(res => {\n      setNotes(res.data);\n    });\n  }, []);\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    });\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"jEhnqV4nQsKpRRwLHcGOrunHPLE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kikuchi/FullStackExercises/part3/NodeStudies/frontend/src/App.js"],"names":["React","useState","useEffect","Note","Notification","Footer","noteService","axios","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","get","then","res","data","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","create","returnedNote","concat","toggleImportanceOf","id","note","find","n","changedNote","update","map","catch","error","setTimeout","handleNoteChange","console","log","target","value","notesToShow","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\nimport axios from 'axios'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    axios \n      .get('https://secret-woodland-45578.herokuapp.com/apinotes')\n      .then(res => {\n        setNotes(res.data)\n      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })    \n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>  \n      <Footer />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}