{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","deleteNote","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","newObject","axios","post","then","response","data","id","put","delete","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","get","res","notesToShow","filter","map","find","n","changedNote","noteService","returnedNote","catch","error","setTimeout","toggleImportanceOf","noteToDelete","console","log","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d814cb3e.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance, deleteNote }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content} \n      <button onClick={toggleImportance}>{label}</button>\n      <button onClick={deleteNote}>delete</button>\n    </li>\n  )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\n\nexport default Footer","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\n// eslint-disable-next-line\nexport default { \n  getAll, create, update, remove\n}","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\nimport axios from 'axios'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    axios \n      .get('http://localhost:3001/api/notes')\n      .then(res => {\n        setNotes(res.data)\n      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n      .update(id, changedNote)\n        .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })    \n  }\n\n  const deleteNote = id => {\n    const noteToDelete = notes.find(note => note.id === id);\n\n    noteService\n      .remove(noteToDelete.id)\n      .then(() => {\n        console.log(noteToDelete.id, 'deleted' );\n        setNotes(notes.filter(note => note.id !== noteToDelete.id))\n      });\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n              deleteNote = {() => deleteNote(note.id)}\n            />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>  \n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}